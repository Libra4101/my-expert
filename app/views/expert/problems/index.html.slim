.container
  .center-box
    h2.ex-problem_title 投稿内容一覧
    / 投稿検索条件
    .row.ex-problem_search_head.my-3
      = form_with url: expert_problems_path, method: :get, class: 'form-inline', local: true do |f|
        = hidden_field_tag :nav_type, 'problems'
        .ex-problem_search_area.mx-3
          .input-group
              = f.text_field :search_problem_keyword, class: 'form-control', value: @search_params[:keyword_problem], placeholder: 'キーワードを入力'
              span.input-group-btn
                = f.submit '検索', class: 'btn btn-primary', name: nil
        .ex-problem_search_count_area.mx-3
          = "全 #{@problems.length}件"
        .ex-problem_sort_area.mx-3.d-flex
          = f.label :search_problem_sort, '並び替え'
          = f.select(:search_problem_sort, select_sort_problem_list, {selected: @search_params[:sort_problem]}, {class: 'sort_list form-control', id: 'sort_list', onchange: 'submit(this.form)' })

    / 投稿内容一覧表示
    .row.ex-problem_body
      .ex-problem_table_area
        table.table.table-bordered 
          thead.thead-light
            tr
              th style="width: 15%" 投稿者
              th style="width: 10%" 優先度            
              th style="width: 20%" 投稿日時
              th style="width: 40%" 投稿内容
              th style="width: 15%" コメント数
          tbody
            - if @problems.present?
              - @problems.each do |problem|
                tr
                  td
                    = problem.client.name
                  td
                    = problem.priority_status_i18n
                  td
                    = l problem.updated_at, format: :long
                  td.text-truncate
                    = link_to expert_problem_path(problem) do
                      = problem.content
                  td.text-center.markup_balloon
                    = icon 'fas', 'comment'
                    span.ml-1 = problem.expert_comments.count
    .row
      .pagenation.mx-auto
        = paginate @problems, param_name: 'problems_page'